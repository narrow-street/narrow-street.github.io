{"version":3,"sources":["components/images/occurrence.jpg","components/images/venues.jpg","components/images/topics.jpg","components/images/retention.jpg","components/data.js","components/Contact.js","components/Navbar.js","components/Projects.js","components/Contents.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","inputs","about","id","title","projects","education","research","contactInfo","email","icon","link","github","linkedin","dsProjects","Occurrence","imgSrc","require","buttons","name","text","Venues","Topics","Attrition","Info","props","react_default","a","createElement","href","info","target","rel","class","className","Contact","Contact_Info","SideItem","toLowerCase","toUpperCase","TopItem","style","width","Navbar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Navbar_SideItem","Contact_Contact","Navbar_TopItem","Component","Project","src","content","alt","margin","map","list","ProjectsList","Projects_Project","Container","contents","children","AboutContainer","Contents_Container","ProjectsContainer","Projects_ProjectsList","Main","Contents_ProjectsContainer","Contents_AboutContainer","App","Navbar_Navbar","Contents_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffa1c0c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/occurrence.834ca3b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/venues.cb0de938.jpg\";","module.exports = __webpack_public_path__ + \"static/media/topics.c977db94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/retention.a105d839.jpg\";","// main sections\nexport const inputs = {\n  about: {\n    id: \"about\",\n    title: \"About Me\",\n  },\n\n  projects: {\n    id: \"projects\",\n    title: \"My Projects\",\n  },\n\n  education: {\n    id: \"education\",\n    title: \"Education\",\n  },\n\n  research: {\n    id: \"research\",\n    title: \"Research\",\n  },\n};\n\n// About Me: self introduction\nexport const intro = \"My name is Ruosi Wang, and I'm a recent Ph.D. graduate from the Harvard Psychology Department. I'm passionate about using data and quantitative aproach to solve challenging problems and generate actionable insights. I enjoy data wrangling, building predictive models, and creating effective visualizations.\"\n\n// About Me: contact Information\nexport const contactInfo = {\n  email: {\n    icon: \"fa-envelope\",\n    link: \"mailto:ruos925@gmail.com\"\n  },\n  github: {\n    icon: \"fa-github\",\n    link: \"https://github.com/narrow-street\"\n  },\n\n  linkedin: {\n    icon: \"fa-linkedin\",\n    link: \"https://www.linkedin.com/in/ruosi-wang/\"\n  }\n};\n\n\n// Data Science Projects\nexport const dsProjects = {\n  Occurrence: {\n    imgSrc: require('./images/occurrence.jpg'),\n    title: \"When do Meetups Happen\",\n    buttons: [\n      { name: 'Code', link: 'https://github.com/narrow-street/plan-your-meetup'},\n      { name: 'Deliverable', link: 'https://narrow-street.github.io/plan-your-meetup/docs/occurrence.html'}\n        ],\n    text: \"Exploratory Data Analysis on the meetups occurrence patterns in 30 US cities\"\n  },\n  Venues: {\n    imgSrc: require('./images/venues.jpg'),\n    title: \"Meetup Venues and Where to Find Them\",\n    buttons: [\n      { name: 'Code', link: 'https://github.com/narrow-street/plan-your-meetup'},\n      { name: 'Deliverable', link: 'https://narrow-street.github.io/plan-your-meetup/docs/venues.html'}\n        ],\n    text: \"Visualizations of the geographical distributions of popular meetups venues\"\n  },\n  Topics: {\n    imgSrc: require('./images/topics.jpg'),\n    title: \"Topic Classification\",\n    buttons: [\n      { name: 'Code', link: 'https://github.com/narrow-street/plan-your-meetup'},\n      { name: 'Deliverable', link: 'https://narrow-street.github.io/plan-your-meetup/docs/classification.html'}\n        ],\n    text: \"Meetups topic classification with Natural Language Processing(NLP) and deep learning\"\n  },\n  Attrition: {\n    imgSrc: require('./images/retention.jpg'),\n    title: \"Attrition Analysis\",\n    buttons: [\n      { name: 'Notebook', link: \"https://www.kaggle.com/ruosiwang/ibm-attrition-prediction-with-ensemble-classifier\"}\n      ],\n    text: \"Exploratory Data analysis and predictions of Employee Attrition with IBM dataset\"\n  }\n}\n\n","import React from 'react'\nimport { contactInfo } from './data'\nimport './style.css'\n\nconst Info = (props) => {\n  return (\n    <span>\n    <a href={props.info.link} target='_blank' rel=\"noopener noreferrer\">\n      <i class={\"fa \" + props.info.icon + \" w3-text-grey w3-xlarge w3-margin-left w3-hover-opacity\"}></i>\n    </a>\n     {\n        props.text ? (\n          <span className=\"w3-margin-right\">\n            {props.text}\n          </span>\n          ) : \"\"\n     }\n    </span>\n  );\n}\n\nexport const Contact = () => {\n  return (\n    <div className=\"w3-section\">\n      <br/><br/>\n      <Info info={ contactInfo.email } />\n      <Info info={ contactInfo.github } />\n      <Info info={ contactInfo.linkedin } />\n    </div>\n  );\n}\n","import React, { Component }from 'react'\nimport { Contact } from './Contact'\nimport './style.css'\n\n\nconst SideItem = (props) => {\n  return (\n    <a href={\"#\" + props.name.toLowerCase() }\n      className=\"w3-bar-item w3-button w3-margin-small w3-hover-gray\">\n      <p>{ props.name.toUpperCase() }</p>\n    </a>\n  );\n}\n\nconst TopItem = (props) => {\n  return (\n    <a href={\"#\" + props.name.toLowerCase() }\n      className=\"w3-bar-item w3-button\"\n      style={{ width: \"20% !important\" }}>\n      { props.name.toUpperCase() }\n    </a>\n  );\n}\n\nexport class Navbar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"w3-sidebar w3-light-gray w3-bar-block w3-medium w3-hide-small\">\n          <br/>\n          <SideItem name=\"Projects\"/>\n          <SideItem name=\"About\"/>\n          <Contact />\n        </nav>\n\n        <div className=\"w3-top w3-hide-large w3-hide-medium\" id=\"myNavbar\">\n          <div className=\"w3-bar w3-light-gray\">\n            <TopItem name=\"Projects\"/>\n            <TopItem name=\"About\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n","import React from 'react'\nimport { dsProjects } from './data'\nimport './style.css'\n\n\nconst Project = (props) => {\n  return (\n    <div className=\"w3-half w3-container w3-margin-bottom w3-hover-shadow\">\n      <img src={ props.content.imgSrc } alt=\"\"\n            style={{ width: \"95%\", margin: 10}}/>\n        <div class=\"w3-container w3-white\">\n          <p><b>{ props.content.title }</b></p>\n          <p>{ props.content.text }\n            <div class=\"w3-margin w3-center\">\n              { props.content.buttons.map(list =>\n              <span>\n              <a href={list.link} target='_blank' rel=\"noopener noreferrer\">\n              <button class=\"w3-button w3-white w3-border w3-round-large\">{list.name}</button>\n              </a>\n              &nbsp;&nbsp;\n              </span>\n              )\n              }\n            </div>\n          </p>\n      </div>\n    </div>\n    );\n}\n\nexport const ProjectsList = () => {\n  return (\n    <div>\n      <div class=\"w3-row-padding\">\n        <Project content={ dsProjects.Occurrence } />\n        <Project content={ dsProjects.Venues } />\n      </div>\n      <div class=\"w3-row-padding\">\n        <Project content={ dsProjects.Topics } />\n        <Project content={ dsProjects.Attrition }/>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react'\nimport { inputs, intro } from './data'\nimport { ProjectsList } from './Projects'\nimport './style.css'\n\n\nconst Container = (props) => {\n  return (\n    <div className=\"container w3-padding-large w3-padding-64\"\n          id={ props.contents.id }>\n      <div className=\"w3-content w3-text-dark-gray\">\n        <h2 className=\"title\">\n          { props.contents.title }\n        </h2>\n        <hr style={{ width: '200'}} className=\"w3-opacity\"/>\n        { props.children }\n      </div>\n    </div>\n  );\n}\n\n\nconst AboutContainer = () => {\n  return (\n    <Container contents={inputs.about}>\n      <p>{ intro }</p>\n    </Container>\n    );\n}\n\nconst ProjectsContainer = () => {\n  return (\n    <Container contents={inputs.projects}>\n      <br/><br/><ProjectsList /><br/>\n    </Container>\n  );\n}\n\n\nexport const Main = () => {\n  return (\n    <div id=\"main\">\n      <ProjectsContainer/>\n      <AboutContainer/>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Navbar } from './components/Navbar'\nimport { Main } from './components/Contents'\nimport './App.css';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}